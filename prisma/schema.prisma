// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String           @id @default(uuid())
  firstName   String
  lastName    String
  userName    String        @unique
  password    String
  email       String        @unique
  gender      Gender        @default(Male)
  birthday    DateTime
  phone       String
  avatar      String 
  fidelity    Int           @default(0)
  role        Role          @default(FREE)
  booking     Booking[]
  review      Review[]
  gameLike    GameLike[]
  badge       Badge[]
  UserToBadge UserToBadge[]
}

model Place {
  id      String       @id @default(uuid())
  name    String
  address String    @unique
  city    String
  zip     String
  phone   String
  menu    String
  event   Event[]
  booking Booking[]
}

model Game {
  id          String        @id @default(uuid())
  name        String
  description String        @db.Text() 
  category    String
  quantity    Int        @default(1)
  price       Int?
  type        String @default("Board Game")
  age         String
  releaseYear DateTime
  rating      Int?
  minPlayers Int @default(2)
  maxPlayers Int @default(0)
  playTime Int @default(0)
  booking     Booking[]
  review      Review[]
  gameLike    GameLike[]
}

model Event {
  id          String      @id @default(uuid())
  name        String
  description String @db.Text()
  exactDate        DateTime?
  day String?
  time String?
  img String @default("https://diceboardgamelounge.com/wp-content/uploads/2021/06/dungeonsatdice_tuesday.jpg")
  //place_id
  place       Place    @relation(fields: [placeId], references: [id])
  placeId     String
}

model Badge {
  id          String           @id @default(uuid())
  name        String
  description String
  condition   String        @unique
  img         String
  user        User[]
  UserToBadge UserToBadge[]
}

model Booking {
  id       String      @id @default(uuid())
  date     DateTime
  nbPeople Int
  //user_id
  user     User     @relation(fields: [userId], references: [id])
  userId   String
  //game_id
  game     Game?     @relation(fields: [gameId], references: [id])
  gameId   String?
  //place_id
  place    Place    @relation(fields: [placeId], references: [id])
  placeId  String
}

model Review {
  id      String    @id @default(uuid())
  content String
  rating  Int
  date DateTime @default(now())
  //user_id
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  //game_id
  game    Game   @relation(fields: [gameId], references: [id])
  gameId  String
}

model GameLike {
  //user_id
  user   User @relation(fields: [userId], references: [id])
  userId String
  //game_id
  game   Game @relation(fields: [gameId], references: [id])
  gameId String

  @@id([userId, gameId])
}

model UserToBadge {
  date DateTime @default(now())
  user    User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  String
  badge   Badge @relation(fields: [badgeId], references: [id], onDelete: Cascade)
  badgeId String

  @@id([userId, badgeId])
}

enum Role {
  FREE
  PREMIUM
  ADMIN
}

enum Gender {
  Male
  Female
  Other
}
